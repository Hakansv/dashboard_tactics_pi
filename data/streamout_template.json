{
    /*
      This is the database schema for the time series based Influx DB
      and the configuration options for the data streaming from dashboard_tactics_pi instruments.
      The user editable streamout.json is in the OpenCPN's data directory for dashboard_tactics_pi plug-in.
      The template streamout_template.json is in in the OpenCPN program's plugin directory for dashboard_tactics_pi.
    */

    // Definition of the database connection API
    "influxdb" : {
        "server"    : "localhost:9999", // shall contain port number
        "api"       : "v2",             // currently only v2 is supported
        "org"       : "ocarina",
        "bucket"    : "nmea",
        "precision" : "ms",             // Only if using "db" time: ns, us, ms, s?
        "token"     : "tLux1iynw2uoUqeFd3xTsZ2BRRONWNHxPMZWDBFP5h--EtkEHw66PG-OZxBZqhB6JlNEBKMCQP7VT9d3PIh4LQ=="
    },

    // Data streamer configuration
    "streamer" : {
        "connectionretry" : 5,           // [s], 0=never retry (no reconnection)
        "timestamps"      : "local",     // "local" or "db" time [select "precision"]
        "verbosity"       : 1            // 0=quiet, 1=1msg/event, 2=verbose logs
    },

    /*
      Sentence mapping into a respective DB schema.
      Sentence data throttling settings.

      The mapping of dashoard_tactics_pi sentences is according to
      ../instruments.h : normally, do not change "sentence" and "mask" values.

      The template DB schema is according to Signal K schema, see
      https://github.com/SignalK/specification/blob/master/schemas/

      To optimize query performance with filters, measurement's sub-propertie, which
      appears before the data value field are presented as tags in InfluxDB API.
      User can change the measurement class, tags and even measurement
      fields to his or her liking, of course.

      The primary implementation is done with a single data instrument,
      therefore the other data fields are, in general, empty in the schema. They
      shall not be removed but left empty - the same schema can be used in
      multidata instruments.

      You do not have to delete a definition from the table, use the "interval":
      -1 : do not save this data item at all
       0 : save all the data items received
      >0 : define in seconds the minimum time in seconds which shall be elapsed
           before the next data item can be saved (for space saving)
    */
    "dbschema" : [
        {
            "sentence"   : "OCPN_DBP_STC_SAT",
            "mask"       : 17,
            "store"      : true,
            "interval"   : 10,
            "measurement" : "navigation",
            "prop1"       : "gnss",
            "prop2"       : "",
            "prop3"       : "",
            "field1"      : "satellites",
            "field2"      : "",
            "field3"      : ""
        },
    ]

}
        
